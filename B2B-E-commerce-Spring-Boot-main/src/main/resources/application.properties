#spring.application.name=B2B E-Commerce
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/ecom
#spring.datasource.username= root
#spring.datasource.password= root
#
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
#spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
#
## Hibernate ddl auto (create, create-drop, validate, update)
#spring.jpa.show-sql=true
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update
#
#spring.jackson.serialization.fail-on-empty-beans=false
## âœ… Static Resource Mapping for Images
## Serve static resources from /uploads/ folder in your project root
#spring.web.resources.static-locations=classpath:/static/,file:./uploads/
spring.application.name=B2B E-Commerce

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/ecom
spring.datasource.username=root
spring.datasource.password=root

# Hibernate Configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update

spring.jackson.serialization.fail-on-empty-beans=false

# Serve static resources from /uploads/ folder
spring.web.resources.static-locations=classpath:/static/,file:uploads/

# Custom upload directory (adjust as needed)
upload.dir=uploads
